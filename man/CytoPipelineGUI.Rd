% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny.R, R/CytoPipelineGUI.R
\name{ScaleTransformApp}
\alias{ScaleTransformApp}
\alias{CytoPipelineCheckApp}
\alias{CytoPipelineGUI}
\title{interactive display and modification of scale transform list}
\usage{
ScaleTransformApp(dir = ".")

CytoPipelineCheckApp(dir = ".", debug = FALSE)
}
\arguments{
\item{dir}{the root directory into which the engine will look for existing
CytoPipeline experiments}

\item{debug}{if TRUE, will output messages on the console tracking the
shiny events, for debugging purposes}
}
\value{
\itemize{
\item for \code{ScaleTransformApp}: no return value
}

\itemize{
\item for \code{CytoPipelineCheckApp}: no return value
}
}
\description{
this application allows the user to visualize a scale
transformation list, possibly amending it channel after channel,
and save the results on disk.
The needed input tranformation list and flow frame for visualization needs
to be read from a CytoPipeline experiments stored in cache.

\code{CytoPipelineGUI} is the companion package of \code{CytoPipeline},
and is used for interactive visualization.
It implements two shiny applications :
\itemize{
\item a shiny app for interactive comparison of flow frames
that are the results of CytoProcessingSteps of the same
or different CytoPipeline experiments.
It is launched using the following statement: \code{CytoPipelineCheckApp()}
\item a shiny app for interactive visualization and manual adjustments of scale
transformation objects. It is launched using the following statement:
\code{ScaleTransformApp()}
}
}
\examples{

# run CytoPipeline object first

outputDir <- base::tempdir()


rawDataDir <-
    system.file("extdata", package = "CytoPipeline")
experimentName <- "OMIP021_PeacoQC"
sampleFiles <- 
    file.path(rawDataDir, list.files(rawDataDir, pattern = "Donor"))
jsonDir <- system.file("extdata", package = "CytoPipeline")
jsonPath <- file.path(jsonDir, "pipelineParams.json")

pipL2 <- 
    CytoPipeline(
        jsonPath,
        experimentName = experimentName,
        sampleFiles = sampleFiles)

suppressWarnings(execute(
    pipL2,
    rmCache = TRUE,
    path = outputDir))

# run shiny app

if (interactive())
    ScaleTransformApp(dir = outputDir)                     


# run CytoPipeline object first

outputDir <- base::tempdir()


rawDataDir <-
    system.file("extdata", package = "CytoPipeline")
experimentName <- "OMIP021_PeacoQC"
sampleFiles <- 
    file.path(
        rawDataDir, 
        list.files(
            rawDataDir, 
            pattern = "Donor"))
jsonDir <- system.file("extdata", package = "CytoPipeline")
jsonPath <- file.path(jsonDir, "pipelineParams.json")

pipL2 <- CytoPipeline(
    jsonPath,
    experimentName = experimentName,
    sampleFiles = sampleFiles)

suppressWarnings(execute(
    pipL2,
    rmCache = TRUE,
    path = outputDir))

# run shiny app

if (interactive())
    CytoPipelineCheckApp(dir = outputDir)                    

}
\seealso{
\link{CytoPipeline}, \link{CytoPipelineCheckApp},
\link{ScaleTransformApp}
}
