[{"path":"/articles/CytoPipelineGUI.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"CytoPipelineGUI : visualization of Flow Cytometry Data Analysis Pipelines run with CytoPipeline","text":"install package, start R enter (uncommented):","code":"# if (!require(\"BiocManager\", quietly = TRUE)) #     install.packages(\"BiocManager\") #  # BiocManager::install(\"CytoPipelineGUI\")"},{"path":"/articles/CytoPipelineGUI.html","id":"foreword---preparation-of-pipeline-results-to-be-visualized","dir":"Articles","previous_headings":"","what":"Foreword - Preparation of pipeline results to be visualized","title":"CytoPipelineGUI : visualization of Flow Cytometry Data Analysis Pipelines run with CytoPipeline","text":"CytoPipelineGUI companion package CytoPipeline, used interactive visualization flow cytometry data pre-processing pipeline results. implements two shiny applications : shiny app interactive comparison flow frames results CytoProcessingSteps different CytoPipeline experiments. launched using following statement: CytoPipelineCheckApp() (see ); shiny app interactive visualization manual adjustments scale transformation objects. launched using following statement: ScaleTransformApp() (see ). order able show CytoPipelineGUI action, pre-requisite need created CytoPipeline object, defined different pipeline steps, run pipeline completion, intermediate results can found cache. preliminary steps performed preparation code . unfamiliar CytoPipeline package, like know steps, advised read CytoPipeline vignette, /watch videos illustrating CytoPipeline suite, accessible links included Demo.Rmd vignette.","code":"# raw data rawDataDir <- system.file(\"extdata\", package = \"CytoPipeline\") sampleFiles <- file.path(rawDataDir, list.files(rawDataDir,                                                 pattern = \"Donor\")) # output files workDir <- suppressMessages(base::tempdir()) # pipeline configuration files (in json) jsonDir <- rawDataDir  # creation of CytoPipeline objects  pipL_PeacoQC <-   CytoPipeline(file.path(jsonDir, \"OMIP021_PeacoQC_pipeline.json\"),                experimentName = \"OMIP021_PeacoQC\",                sampleFiles = sampleFiles)  pipL_flowAI <-   CytoPipeline(file.path(jsonDir, \"OMIP021_flowAI_pipeline.json\"),                experimentName = \"OMIP021_flowAI\",                sampleFiles = sampleFiles)  # execute PeacoQC pipeline suppressWarnings(execute(pipL_PeacoQC, rmCache = TRUE, path = workDir))  # execute flowAI pipeline suppressWarnings(execute(pipL_flowAI, rmCache = TRUE, path = workDir)) ## Quality control for the file: Donor1 ## 3.18% of anomalous cells detected in the flow rate check.  ## 0% of anomalous cells detected in signal acquisition check.  ## 0.12% of anomalous cells detected in the dynamic range check.  ## Quality control for the file: Donor2 ## 4.52% of anomalous cells detected in the flow rate check.  ## 0% of anomalous cells detected in signal acquisition check.  ## 0.1% of anomalous cells detected in the dynamic range check."},{"path":"/articles/CytoPipelineGUI.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"CytoPipelineGUI : visualization of Flow Cytometry Data Analysis Pipelines run with CytoPipeline","text":"visualization tools shown demonstrated results two different previously run CytoPipeline objects. flow cytometry pre-processing pipeline described details CytoPipeline vignette. short summary illustrating dataset, well pipeline steps.","code":""},{"path":"/articles/CytoPipelineGUI.html","id":"example-dataset-more-details-in-cytopipeline-vignette","dir":"Articles","previous_headings":"Introduction","what":"Example dataset (more details in CytoPipeline vignette)","title":"CytoPipelineGUI : visualization of Flow Cytometry Data Analysis Pipelines run with CytoPipeline","text":"example dataset used throughout vignette derived reference public dataset accompanying OMIP-021 (Optimized Multicolor Immunofluorescence Panel 021) article (Gherardin et al. 2014). sub-sample public dataset built-CytoPipeline package, OMIP021 dataset. See MakeOMIP021Samples.R script details OMIP021 dataset created. script found script subdirectory CytoPipeline package installation path.","code":""},{"path":"/articles/CytoPipelineGUI.html","id":"example-of-pre-processing-and-qc-pipelines-more-details-in-cytopipeline-vignette","dir":"Articles","previous_headings":"Introduction","what":"Example of pre-processing and QC pipelines (more details in CytoPipeline vignette)","title":"CytoPipelineGUI : visualization of Flow Cytometry Data Analysis Pipelines run with CytoPipeline","text":"example pipeline, assumed wanted pre-process two samples OMIP021 dataset, wanted compare obtain pre-processing files using two different QC methods. first pre-processing pipeline, used flowAI QC method (Monaco et al. 2016), second pipeline, used PeacoQC method (Emmaneel et al. 2021). pipelines, first part consisted estimating appropriate scale transformation functions channels present sample flowFrame. , ran following steps (Fig. 1): reading two samples .fcs files removing margin events file applying compensation file aggregating sub-sampling file estimating scale transformations aggregated sub-sampled data Scale transform processing queue first part, pre-processing file, one one, performed. However, depending choice QC method, order steps needed slightly different (see Fig. 2) : Pre-processing queue two different pipeline settings","code":""},{"path":[]},{"path":"/articles/CytoPipelineGUI.html","id":"visualizing-pipeline-runs-at-different-steps","dir":"Articles","previous_headings":"Interactive visualizations","what":"Visualizing pipeline runs at different steps","title":"CytoPipelineGUI : visualization of Flow Cytometry Data Analysis Pipelines run with CytoPipeline","text":"Using CytoPipelineGUI package, possible interactively inspect intermediate results produced pipeline execution. done CytoPipelineCheckApp, can provide view data structure, .e.Â flowFrame, step pipeline, well comparison pair flowFrame state. difficult extensively demonstrate specific user interactions vignette, therefore live demo videos can found Demo.Rmd vignette. However, possible mimic call shiny application features, using specific CytoPipelineGUI exported functions. first example function call retrieves visuals workflow previously run pipeline:  also possible programmatically obtain comparison plots displayed within shiny application. example, one comparing two pipelines (PeacoQC vs flowAI) QC step:","code":"if (interactive()) {     CytoPipelineGUI::CytoPipelineCheckApp(dir = workDir)     } # pre-processing workflow expName <- \"OMIP021_PeacoQC\" CytoPipelineGUI::plotSelectedWorkflow(             experimentName = expName,             whichQueue = \"pre-processing\",             sampleFile = sampleFiles[1],             path = workDir) expName1 <- \"OMIP021_PeacoQC\" expName2 <- \"OMIP021_flowAI\"  p1 <- CytoPipelineGUI::plotSelectedFlowFrame(     experimentName = expName1,     whichQueue = \"pre-processing\",     sampleFile = 2,     flowFrameName = \"perform_QC_obj\",     path = workDir,     xChannelLabel = \"Time : NA\",     yChannelLabel = \"FSC-A : NA\",     useAllCells = TRUE,     useFixedLinearRange = FALSE)  p2 <- CytoPipelineGUI::plotSelectedFlowFrame(     experimentName = expName2,     whichQueue = \"pre-processing\",     sampleFile = 2,      flowFrameName = \"perform_QC_obj\",     path = workDir,     xChannelLabel = \"Time : NA\",     yChannelLabel = \"FSC-A : NA\",     useAllCells = TRUE,     useFixedLinearRange = FALSE)  p3 <- CytoPipelineGUI::plotDiffFlowFrame(     path = workDir,     experimentNameFrom = expName1,     whichQueueFrom = \"pre-processing\",     sampleFileFrom = 2,      flowFrameNameFrom = \"perform_QC_obj\",     xChannelLabelFrom = \"Time : NA\",     yChannelLabelFrom = \"FSC-A : NA\",     experimentNameTo = expName2,     whichQueueTo = \"pre-processing\",     sampleFileTo = 2,     flowFrameNameTo = \"perform_QC_obj\",     xChannelLabelTo = \"Time : NA\",     yChannelLabelTo = \"FSC-A : NA\",     useAllCells = TRUE,     useFixedLinearRange = FALSE)  p1+p2+p3"},{"path":"/articles/CytoPipelineGUI.html","id":"visualization-of-scale-transformations","dir":"Articles","previous_headings":"Interactive visualizations","what":"Visualization of scale transformations","title":"CytoPipelineGUI : visualization of Flow Cytometry Data Analysis Pipelines run with CytoPipeline","text":"Besides flowFrame comparison tool, CytoPipelineGUI provides another shiny app, allows interactively visualize manage scale transformations generated part prep-processing pipelines. shape scale transformations automatically set chosen algorithm appears non satisfactory, possible, using shiny application, manually adjust parameters transformation, save results RDS object. object can re-used another pipeline instance. Note also, possible obtain visuals scale transformations programmatically, although bit evolved, one use CytoPipeline functions .","code":"# 5. show scale transformations if (interactive()){     CytoPipelineGUI::ScaleTransformApp(dir = workDir)     } expName <- \"OMIP021_PeacoQC\" pipL <- CytoPipeline::buildCytoPipelineFromCache(     experimentName = expName,     path = workDir )      ff <- CytoPipeline::getCytoPipelineFlowFrame(         pipL,         path = workDir,         whichQueue = \"scale transform\",         objectName = \"flowframe_aggregate_obj\"     )          p1 <- plotScaleTransformedChannel(         ff,         channel = \"FSC-A\",         transfoType = \"linear\",         linA = 0.0002,         linB = -0.5)          p2 <- plotScaleTransformedChannel(         ff,         channel = \"CD3\",         applyTransform = \"data\",         transfoType = \"logicle\",         negDecades = 1,         width = 0.5,         posDecades = 4     )          p1+p2"},{"path":"/articles/CytoPipelineGUI.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"CytoPipelineGUI : visualization of Flow Cytometry Data Analysis Pipelines run with CytoPipeline","text":"","code":"## R version 4.4.0 (2024-04-24) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.4 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] patchwork_1.2.0       CytoPipelineGUI_1.3.0 CytoPipeline_1.5.0    ## [4] BiocStyle_2.33.0      ##  ## loaded via a namespace (and not attached): ##   [1] DBI_1.2.2             gridExtra_2.3         rlang_1.1.3           ##   [4] magrittr_2.0.3        clue_0.3-65           GetoptLong_1.0.5      ##   [7] matrixStats_1.3.0     compiler_4.4.0        RSQLite_2.3.6         ##  [10] png_0.1-8             systemfonts_1.0.6     vctrs_0.6.5           ##  [13] reshape2_1.4.4        stringr_1.5.1         pkgconfig_2.0.3       ##  [16] shape_1.4.6.1         crayon_1.5.2          fastmap_1.1.1         ##  [19] dbplyr_2.5.0          labeling_0.4.3        utf8_1.2.4            ##  [22] promises_1.3.0        ncdfFlow_2.51.0       rmarkdown_2.26.2      ##  [25] graph_1.83.0          ragg_1.3.1            purrr_1.0.2           ##  [28] bit_4.0.5             xfun_0.43             zlibbioc_1.51.0       ##  [31] cachem_1.0.8          jsonlite_1.8.8        flowWorkspace_4.17.0  ##  [34] blob_1.2.4            highr_0.10            later_1.3.2           ##  [37] parallel_4.4.0        cluster_2.1.6         R6_2.5.1              ##  [40] bslib_0.7.0           stringi_1.8.4         RColorBrewer_1.1-3    ##  [43] jquerylib_0.1.4       Rcpp_1.0.12           bookdown_0.39         ##  [46] iterators_1.0.14      knitr_1.46            zoo_1.8-12            ##  [49] IRanges_2.39.0        flowCore_2.17.0       httpuv_1.6.15         ##  [52] tidyselect_1.2.1      yaml_2.3.8            doParallel_1.0.17     ##  [55] codetools_0.2-20      curl_5.2.1            lattice_0.22-6        ##  [58] tibble_3.2.1          plyr_1.8.9            Biobase_2.65.0        ##  [61] shiny_1.8.1.1         withr_3.0.0           evaluate_0.23         ##  [64] desc_1.4.3            BiocFileCache_2.13.0  circlize_0.4.16       ##  [67] pillar_1.9.0          BiocManager_1.30.23   filelock_1.0.3        ##  [70] foreach_1.5.2         flowAI_1.35.0         stats4_4.4.0          ##  [73] generics_0.1.3        diagram_1.6.5         S4Vectors_0.43.0      ##  [76] ggplot2_3.5.1         munsell_0.5.1         ggcyto_1.33.0         ##  [79] scales_1.3.0          xtable_1.8-4          PeacoQC_1.15.0        ##  [82] changepoint_2.2.4     glue_1.7.0            tools_4.4.0           ##  [85] hexbin_1.28.3         data.table_1.15.4     fs_1.6.4              ##  [88] XML_3.99-0.16.1       grid_4.4.0            RProtoBufLib_2.17.0   ##  [91] colorspace_2.1-0      cli_3.6.2             textshaping_0.3.7     ##  [94] fansi_1.0.6           cytolib_2.17.0        ComplexHeatmap_2.21.0 ##  [97] dplyr_1.1.4           Rgraphviz_2.49.0      gtable_0.3.5          ## [100] sass_0.4.9            digest_0.6.35         BiocGenerics_0.51.0   ## [103] farver_2.1.2          rjson_0.2.21          htmlwidgets_1.6.4     ## [106] memoise_2.0.1         htmltools_0.5.8.1     pkgdown_2.0.9.9000    ## [109] lifecycle_1.0.4       httr_1.4.7            GlobalOptions_0.1.2   ## [112] mime_0.12             bit64_4.0.5"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/Demo.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Demonstration of the CytoPipeline R package suite functionalities","text":"","code":"## R version 4.4.0 (2024-04-24) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.4 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] BiocStyle_2.33.0 ##  ## loaded via a namespace (and not attached): ##  [1] vctrs_0.6.5         cli_3.6.2           knitr_1.46          ##  [4] rlang_1.1.3         xfun_0.43           purrr_1.0.2         ##  [7] textshaping_0.3.7   jsonlite_1.8.8      htmltools_0.5.8.1   ## [10] ragg_1.3.1          sass_0.4.9          rmarkdown_2.26.2    ## [13] evaluate_0.23       jquerylib_0.1.4     fastmap_1.1.1       ## [16] yaml_2.3.8          lifecycle_1.0.4     memoise_2.0.1       ## [19] bookdown_0.39       BiocManager_1.30.23 compiler_4.4.0      ## [22] fs_1.6.4            htmlwidgets_1.6.4   systemfonts_1.0.6   ## [25] digest_0.6.35       R6_2.5.1            magrittr_2.0.3      ## [28] bslib_0.7.0         tools_4.4.0         pkgdown_2.0.9.9000  ## [31] cachem_1.0.8        desc_1.4.3"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Philippe Hauchamps. Author, maintainer. Laurent Gatto. Author. Dan Lin. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hauchamps P, Bayat B, Delandre S, Hamrouni M, Toussaint M, Temmerman S, Lin D, Gatto L (2024). âCytoPipeline CytoPipelineGUI: Bioconductor R package suite building visualizing automated pre-processing pipelines flow cytometry data.â BMC Bioinformatics, 25(1), 80. doi:10.1186/s12859-024-05691-z.","code":"@Article{,   title = {{CytoPipeline} and {CytoPipelineGUI}: a Bioconductor {R} package               suite for building and visualizing automated pre-processing               pipelines for flow cytometry data},   author = {Philippe Hauchamps and Babak Bayat and Simon Delandre and Mehdi Hamrouni and Marie Toussaint and Stephane Temmerman and Dan Lin and Laurent Gatto},   journal = {BMC Bioinformatics},   year = {2024},   volume = {25},   number = {1},   pages = {80},   doi = {10.1186/s12859-024-05691-z}, }"},{"path":[]},{"path":"/index.html","id":"what-is-cytopipelinegui","dir":"","previous_headings":"Automation and visualization of flow cytometry data analysis pipelines","what":"What is CytoPipelineGUI?","title":"GUI's for visualization of flow cytometry data analysis pipelines","text":"CytoPipelineGUI companion package CytoPipeline, used interactive visualization. implements two shiny applications : - shiny app interactive comparison flow frames results CytoProcessingSteps different CytoPipeline experiments. launched using following statement: CytoPipelineCheckApp() - shiny app interactive visualization manual adjustments scale transformation objects. launched using following statement: ScaleTransformApp()","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"Automation and visualization of flow cytometry data analysis pipelines","what":"License","title":"GUI's for visualization of flow cytometry data analysis pipelines","text":"CytoPipelineGUI code provided GPL license version 3.0 higher. documentation, including manual pages vignettes, distributed CC -SA 4.0 license.","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"Automation and visualization of flow cytometry data analysis pipelines","what":"Citation","title":"GUI's for visualization of flow cytometry data analysis pipelines","text":"use CytopipelineGUI research, please use following citation: Hauchamps P, Bayat B, Delandre S, Hamrouni M, Toussaint M, Temmerman S, Lin D, Gatto L (2024). âCytoPipeline CytoPipelineGUI: Bioconductor R package suite building visualizing automated pre-processing pipelines flow cytometry data.â BMC Bioinformatics, 25(1), 80. doi:10.1186/s12859-024-05691-z https://doi.org/10.1186/s12859-024-05691-z. run citation(\"CytoPipelineGUI\") get bibtex entry.","code":""},{"path":"/reference/CytoPipelineCheckApp.html","id":null,"dir":"Reference","previous_headings":"","what":"interactive visualization of flow cytometry data analysis pipeline objects stored in cache â CytoPipelineCheckApp","title":"interactive visualization of flow cytometry data analysis pipeline objects stored in cache â CytoPipelineCheckApp","text":"interactive visualization flow cytometry data analysis pipeline objects stored cache","code":""},{"path":"/reference/CytoPipelineCheckApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interactive visualization of flow cytometry data analysis pipeline objects stored in cache â CytoPipelineCheckApp","text":"","code":"CytoPipelineCheckApp(dir = \".\", debug = FALSE)"},{"path":"/reference/CytoPipelineCheckApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"interactive visualization of flow cytometry data analysis pipeline objects stored in cache â CytoPipelineCheckApp","text":"dir root directory engine look existing CytoPipeline experiments debug TRUE, output messages console tracking shiny events, debugging purposes","code":""},{"path":"/reference/CytoPipelineCheckApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"interactive visualization of flow cytometry data analysis pipeline objects stored in cache â CytoPipelineCheckApp","text":"return value","code":""},{"path":"/reference/CytoPipelineCheckApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"interactive visualization of flow cytometry data analysis pipeline objects stored in cache â CytoPipelineCheckApp","text":"","code":"# run CytoPipeline object first  outputDir <- base::tempdir()   rawDataDir <-     system.file(\"extdata\", package = \"CytoPipeline\") experimentName <- \"OMIP021_PeacoQC\" sampleFiles <-      file.path(         rawDataDir,          list.files(             rawDataDir,              pattern = \"Donor\")) jsonDir <- system.file(\"extdata\", package = \"CytoPipeline\") jsonPath <- file.path(jsonDir, \"pipelineParams.json\")  pipL2 <- CytoPipeline(     jsonPath,     experimentName = experimentName,     sampleFiles = sampleFiles)  suppressWarnings(execute(     pipL2,     rmCache = TRUE,     path = outputDir)) #> ##################################################### #> ### running SCALE TRANSFORMATION processing steps ### #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor1.fcs #> Removing margins from file : Donor2.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor1.fcs #> Compensating file : Donor2.fcs #> Proceeding with step 4 [flowframe_aggregate] ... #> Proceeding with step 5 [scale_transform_estimate] ... #> ##################################################### #> ### NOW PRE-PROCESSING FILE /__w/_temp/Library/CytoPipeline/extdata/Donor1.fcs... #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor1.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor1.fcs #> Proceeding with step 4 [remove_doublets] ... #> Proceeding with step 5 [remove_debris] ... #> Proceeding with step 6 [remove_dead_cells] ... #> Proceeding with step 7 [perform_QC] ... #> Applying PeacoQC method... #> Starting quality control analysis for Donor1.fcs #> Calculating peaks #> MAD analysis removed 30.75% of the measurements #> The algorithm removed 30.75% of the measurements #> Proceeding with step 8 [transform] ... #> ##################################################### #> ### NOW PRE-PROCESSING FILE /__w/_temp/Library/CytoPipeline/extdata/Donor2.fcs... #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor2.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor2.fcs #> Proceeding with step 4 [remove_doublets] ... #> Proceeding with step 5 [remove_debris] ... #> Proceeding with step 6 [remove_dead_cells] ... #> Proceeding with step 7 [perform_QC] ... #> Applying PeacoQC method... #> Starting quality control analysis for Donor2.fcs #> Calculating peaks #> MAD analysis removed 24.38% of the measurements #> The algorithm removed 24.38% of the measurements #> Proceeding with step 8 [transform] ...  # run shiny app  if (interactive())     CytoPipelineCheckApp(dir = outputDir)"},{"path":"/reference/CytoPipelineGUI.html","id":null,"dir":"Reference","previous_headings":"","what":"CytoPipelineGUI package â CytoPipelineGUI","title":"CytoPipelineGUI package â CytoPipelineGUI","text":"CytoPipelineGUI companion package CytoPipeline, used interactive visualization. implements two shiny applications : shiny app interactive comparison flow frames results CytoProcessingSteps different CytoPipeline experiments. launched using following statement: CytoPipelineCheckApp() shiny app interactive visualization manual adjustments scale transformation objects. launched using following statement: ScaleTransformApp()","code":""},{"path":[]},{"path":"/reference/CytoPipelineGUI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CytoPipelineGUI package â CytoPipelineGUI","text":"Maintainer: Philippe Hauchamps philippe.hauchamps@uclouvain.(ORCID) Authors: Laurent Gatto laurent.gatto@uclouvain.(ORCID) contributors: Dan Lin dan.8.lin@gsk.com [contributor]","code":""},{"path":"/reference/ScaleTransformApp.html","id":null,"dir":"Reference","previous_headings":"","what":"interactive display and modification of scale transform list â ScaleTransformApp","title":"interactive display and modification of scale transform list â ScaleTransformApp","text":"application allows user visualize scale transformation list, possibly amending channel channel, save results disk. needed input tranformation list flow frame visualization needs read CytoPipeline experiments stored cache.","code":""},{"path":"/reference/ScaleTransformApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interactive display and modification of scale transform list â ScaleTransformApp","text":"","code":"ScaleTransformApp(dir = \".\")"},{"path":"/reference/ScaleTransformApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"interactive display and modification of scale transform list â ScaleTransformApp","text":"dir root directory engine look existing CytoPipeline experiments","code":""},{"path":"/reference/ScaleTransformApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"interactive display and modification of scale transform list â ScaleTransformApp","text":"return value","code":""},{"path":"/reference/ScaleTransformApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"interactive display and modification of scale transform list â ScaleTransformApp","text":"","code":"# run CytoPipeline object first  outputDir <- base::tempdir()   rawDataDir <-     system.file(\"extdata\", package = \"CytoPipeline\") experimentName <- \"OMIP021_PeacoQC\" sampleFiles <-      file.path(rawDataDir, list.files(rawDataDir, pattern = \"Donor\")) jsonDir <- system.file(\"extdata\", package = \"CytoPipeline\") jsonPath <- file.path(jsonDir, \"pipelineParams.json\")  pipL2 <-      CytoPipeline(         jsonPath,         experimentName = experimentName,         sampleFiles = sampleFiles)  suppressWarnings(execute(     pipL2,     rmCache = TRUE,     path = outputDir)) #> ##################################################### #> ### running SCALE TRANSFORMATION processing steps ### #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor1.fcs #> Removing margins from file : Donor2.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor1.fcs #> Compensating file : Donor2.fcs #> Proceeding with step 4 [flowframe_aggregate] ... #> Proceeding with step 5 [scale_transform_estimate] ... #> ##################################################### #> ### NOW PRE-PROCESSING FILE /__w/_temp/Library/CytoPipeline/extdata/Donor1.fcs... #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor1.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor1.fcs #> Proceeding with step 4 [remove_doublets] ... #> Proceeding with step 5 [remove_debris] ... #> Proceeding with step 6 [remove_dead_cells] ... #> Proceeding with step 7 [perform_QC] ... #> Applying PeacoQC method... #> Starting quality control analysis for Donor1.fcs #> Calculating peaks #> MAD analysis removed 30.75% of the measurements #> The algorithm removed 30.75% of the measurements #> Proceeding with step 8 [transform] ... #> ##################################################### #> ### NOW PRE-PROCESSING FILE /__w/_temp/Library/CytoPipeline/extdata/Donor2.fcs... #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor2.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor2.fcs #> Proceeding with step 4 [remove_doublets] ... #> Proceeding with step 5 [remove_debris] ... #> Proceeding with step 6 [remove_dead_cells] ... #> Proceeding with step 7 [perform_QC] ... #> Applying PeacoQC method... #> Starting quality control analysis for Donor2.fcs #> Calculating peaks #> MAD analysis removed 24.38% of the measurements #> The algorithm removed 24.38% of the measurements #> Proceeding with step 8 [transform] ...  # run shiny app  if (interactive())     ScaleTransformApp(dir = outputDir)"},{"path":"/reference/plotDiffFlowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the difference plot between two flow frames from a CytoPipeline run â plotDiffFlowFrame","title":"Plot the difference plot between two flow frames from a CytoPipeline run â plotDiffFlowFrame","text":"Based experiment name, function gather required flowFrames CytoPipeline disk cache display difference plot using user chosen 1D 2D view.","code":""},{"path":"/reference/plotDiffFlowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the difference plot between two flow frames from a CytoPipeline run â plotDiffFlowFrame","text":"","code":"plotDiffFlowFrame(   experimentNameFrom,   experimentNameTo,   whichQueueFrom,   whichQueueTo,   sampleFileFrom,   sampleFileTo,   path,   flowFrameNameFrom,   flowFrameNameTo,   xChannelLabelFrom,   xChannelLabelTo,   yChannelLabelFrom,   yChannelLabelTo,   interactive = FALSE,   useAllCells,   nDisplayCells,   useFixedLinearRange,   linearRange,   transfoListName = \" \" )"},{"path":"/reference/plotDiffFlowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the difference plot between two flow frames from a CytoPipeline run â plotDiffFlowFrame","text":"experimentNameFrom experiment name (representing pipeline run) extract flow frame ('' situation) experimentNameTo experiment name (representing pipeline run) extract flow frame ('' situation) whichQueueFrom \"pre-processing\" \"scale transform\" ('' situation) whichQueueTo \"pre-processing\" \"scale transform\" ('' situation) sampleFileFrom case 'whichQueueFrom' set 'pre-processing, sample file look '' situation. can number character. whichQueueFrom == \"scale transform\", sampleFileFrom ignored NULL whihQueueFrom == \"pre-processing\", sampleFileFrom defaulted first one belonging experiment sampleFileTo sampleFileFrom, '' situation path root path look CytoPipeline experiment cache flowFrameNameFrom '' situation, name object fetch (referenced pipeline workflow) flowFrameNameTo '' situation, name object fetch (referenced pipeline workflow) xChannelLabelFrom label channel displayed x axis: conventional syntax : channelName + \" - \" + channelMarker xChannelLabelTo equal xChannelLabelFrom (otherwise plot returned NULL) yChannelLabelFrom label channel displayed y axis: conventional syntax : channelName + \" - \" + channelMarker yChannelLabelTo equal yChannelLabelFrom (otherwise plot returned NULL) interactive TRUE, uses ggplot_shiny useAllCells TRUE, subsampling done nDisplayCells useAllCells == FALSE, number subsampled cells useFixedLinearRange TRUE, channels using linear scale use fixed range set linearRange linearRange set channels using linear scale, useFixedLinearRange == TRUE transfoListName set \" \", transformation list (object name ending \"_obj\", referenced pipeline workflow) used display.","code":""},{"path":"/reference/plotDiffFlowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the difference plot between two flow frames from a CytoPipeline run â plotDiffFlowFrame","text":"ggplot (plotly interactive = TRUE) object","code":""},{"path":"/reference/plotDiffFlowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the difference plot between two flow frames from a CytoPipeline run â plotDiffFlowFrame","text":"","code":"# run CytoPipeline object first  outputDir <- base::tempdir()   rawDataDir <-     system.file(\"extdata\", package = \"CytoPipeline\") experimentName <- \"OMIP021_PeacoQC\" sampleFiles <-      file.path(         rawDataDir,          list.files(rawDataDir, pattern = \"Donor\")) jsonDir <- system.file(\"extdata\", package = \"CytoPipeline\") jsonPath <- file.path(jsonDir, \"pipelineParams.json\")  pipL2 <- CytoPipeline(     jsonPath,     experimentName = experimentName,     sampleFiles = sampleFiles)  suppressWarnings(execute(     pipL2,     rmCache = TRUE,     path = outputDir)) #> ##################################################### #> ### running SCALE TRANSFORMATION processing steps ### #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor1.fcs #> Removing margins from file : Donor2.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor1.fcs #> Compensating file : Donor2.fcs #> Proceeding with step 4 [flowframe_aggregate] ... #> Proceeding with step 5 [scale_transform_estimate] ... #> ##################################################### #> ### NOW PRE-PROCESSING FILE /__w/_temp/Library/CytoPipeline/extdata/Donor1.fcs... #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor1.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor1.fcs #> Proceeding with step 4 [remove_doublets] ... #> Proceeding with step 5 [remove_debris] ... #> Proceeding with step 6 [remove_dead_cells] ... #> Proceeding with step 7 [perform_QC] ... #> Applying PeacoQC method... #> Starting quality control analysis for Donor1.fcs #> Calculating peaks #> MAD analysis removed 30.75% of the measurements #> The algorithm removed 30.75% of the measurements #> Proceeding with step 8 [transform] ... #> ##################################################### #> ### NOW PRE-PROCESSING FILE /__w/_temp/Library/CytoPipeline/extdata/Donor2.fcs... #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor2.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor2.fcs #> Proceeding with step 4 [remove_doublets] ... #> Proceeding with step 5 [remove_debris] ... #> Proceeding with step 6 [remove_dead_cells] ... #> Proceeding with step 7 [perform_QC] ... #> Applying PeacoQC method... #> Starting quality control analysis for Donor2.fcs #> Calculating peaks #> MAD analysis removed 24.38% of the measurements #> The algorithm removed 24.38% of the measurements #> Proceeding with step 8 [transform] ...   plotDiffFlowFrame(     experimentNameFrom = experimentName,     whichQueueFrom = \"pre-processing\",     sampleFileFrom = 1,     flowFrameNameFrom = \"remove_doublets_obj\",     xChannelLabelFrom = \"FSC-A : NA\",     yChannelLabelFrom = \"SSC-A : NA\",     path = outputDir,     experimentNameTo = experimentName,     whichQueueTo = \"pre-processing\",     sampleFileTo = 1,     flowFrameNameTo = \"remove_debris_obj\",     xChannelLabelTo = \"FSC-A : NA\",     yChannelLabelTo = \"SSC-A : NA\",     useAllCells = TRUE,     nDisplayCells = 0,     useFixedLinearRange = TRUE,     linearRange = c(-100, 262144)) #> displaying flow frame comparison plot...   plotDiffFlowFrame(     experimentNameFrom = experimentName,     whichQueueFrom = \"pre-processing\",     sampleFileFrom = 1,     flowFrameNameFrom = \"remove_doublets_obj\",     xChannelLabelFrom = \"FSC-A : NA\",     yChannelLabelFrom = \"SSC-A : NA\",     path = outputDir,     experimentNameTo = experimentName,     whichQueueTo = \"pre-processing\",     sampleFileTo = 1,     flowFrameNameTo = \"remove_debris_obj\",     xChannelLabelTo = \"FSC-A : NA\",     yChannelLabelTo = \"SSC-A : NA\",     useAllCells = FALSE,     nDisplayCells = 100,     useFixedLinearRange = FALSE,     linearRange = NULL) #> displaying flow frame comparison plot...   plotDiffFlowFrame(     experimentNameFrom = experimentName,     whichQueueFrom = \"pre-processing\",     sampleFileFrom = 1,     flowFrameNameFrom = \"remove_debris_obj\",     xChannelLabelFrom = \"FSC-A : NA\",     yChannelLabelFrom = \"Comp-525/50Violet-A : L/D Aqua - Viability\",     path = outputDir,     experimentNameTo = experimentName,     whichQueueTo = \"pre-processing\",     sampleFileTo = 1,     flowFrameNameTo = \"remove_dead_cells_obj\",     xChannelLabelTo = \"FSC-A : NA\",     yChannelLabelTo = \"Comp-525/50Violet-A : L/D Aqua - Viability\",     useAllCells = TRUE,     nDisplayCells = 0,     useFixedLinearRange = FALSE,     linearRange = NULL,     transfoListName = \"scale_transform_estimate_obj\")    #> displaying flow frame comparison plot..."},{"path":"/reference/plotScaleTransformedChannel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a flow frame in 1D with explicit user given scale transform â plotScaleTransformedChannel","title":"Plot a flow frame in 1D with explicit user given scale transform â plotScaleTransformedChannel","text":"function plots 1D view, .e. marginal distribution one specified channel, given flow frame, using specific user-provided scale transformation parameters.","code":""},{"path":"/reference/plotScaleTransformedChannel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a flow frame in 1D with explicit user given scale transform â plotScaleTransformedChannel","text":"","code":"plotScaleTransformedChannel(   ff,   channel,   applyTransform = c(\"axis scale only\", \"data\"),   transfoType = c(\"linear\", \"logicle\"),   linA,   linB,   negDecades,   width,   posDecades )"},{"path":"/reference/plotScaleTransformedChannel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a flow frame in 1D with explicit user given scale transform â plotScaleTransformedChannel","text":"ff flowFrame plotted channel name channel display marginal distribution (.e. channel name used column ff expression matrix). applyTransform \"data\", data explicitly transformed using user provided sclae transformation parameters, display \"axis scale \" (default), data transformed, .e. x axis scale defined according scale transformation parameters. transfoType transformation type, currently linear logicle(bi-exponential) supported. linA intercept parameter linear transformation. linB slope parameter linear transformation. negDecades number additional decades negative side logicle transformation. width width parameter logicle transformation. posDecades number positive decades logicle tranformation.","code":""},{"path":"/reference/plotScaleTransformedChannel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a flow frame in 1D with explicit user given scale transform â plotScaleTransformedChannel","text":"ggplot object","code":""},{"path":"/reference/plotScaleTransformedChannel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a flow frame in 1D with explicit user given scale transform â plotScaleTransformedChannel","text":"","code":"# run CytoPipeline object first  outputDir <- base::tempdir()   rawDataDir <-     system.file(\"extdata\", package = \"CytoPipeline\") experimentName <- \"OMIP021_PeacoQC\" sampleFiles <-      file.path(         rawDataDir,          list.files(rawDataDir, pattern = \"Donor\")) jsonDir <- system.file(\"extdata\", package = \"CytoPipeline\") jsonPath <- file.path(jsonDir, \"pipelineParams.json\")  pipL2 <- CytoPipeline(     jsonPath,     experimentName = experimentName,     sampleFiles = sampleFiles)  suppressWarnings(execute(     pipL2,     rmCache = TRUE,     path = outputDir)) #> ##################################################### #> ### running SCALE TRANSFORMATION processing steps ### #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor1.fcs #> Removing margins from file : Donor2.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor1.fcs #> Compensating file : Donor2.fcs #> Proceeding with step 4 [flowframe_aggregate] ... #> Proceeding with step 5 [scale_transform_estimate] ... #> ##################################################### #> ### NOW PRE-PROCESSING FILE /__w/_temp/Library/CytoPipeline/extdata/Donor1.fcs... #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor1.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor1.fcs #> Proceeding with step 4 [remove_doublets] ... #> Proceeding with step 5 [remove_debris] ... #> Proceeding with step 6 [remove_dead_cells] ... #> Proceeding with step 7 [perform_QC] ... #> Applying PeacoQC method... #> Starting quality control analysis for Donor1.fcs #> Calculating peaks #> MAD analysis removed 30.75% of the measurements #> The algorithm removed 30.75% of the measurements #> Proceeding with step 8 [transform] ... #> ##################################################### #> ### NOW PRE-PROCESSING FILE /__w/_temp/Library/CytoPipeline/extdata/Donor2.fcs... #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor2.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor2.fcs #> Proceeding with step 4 [remove_doublets] ... #> Proceeding with step 5 [remove_debris] ... #> Proceeding with step 6 [remove_dead_cells] ... #> Proceeding with step 7 [perform_QC] ... #> Applying PeacoQC method... #> Starting quality control analysis for Donor2.fcs #> Calculating peaks #> MAD analysis removed 24.38% of the measurements #> The algorithm removed 24.38% of the measurements #> Proceeding with step 8 [transform] ...  ff <- CytoPipeline::getCytoPipelineFlowFrame( pipL2, path = outputDir, whichQueue = \"scale transform\", objectName = \"flowframe_aggregate_obj\" )  plotScaleTransformedChannel(     ff,     channel = \"FSC-A\",     transfoType = \"linear\",     linA = 0.0002,     linB = -0.5)   plotScaleTransformedChannel(     ff,     channel = \"Comp-670/30Violet-A\",     transfoType = \"logicle\",     negDecades = 1,     width = 0.5,     posDecades = 4 )   plotScaleTransformedChannel(     ff,     channel = \"CD3\",     applyTransform = \"data\",     transfoType = \"logicle\",     negDecades = 1,     width = 0.5,     posDecades = 4 )"},{"path":"/reference/plotSelectedFlowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a flow frame from a CytoPipeline run â plotSelectedFlowFrame","title":"Plot a flow frame from a CytoPipeline run â plotSelectedFlowFrame","text":"Based experiment name, function gather required flowFrame CytoPipeline disk cache display using user chosen 1D 2D view.","code":""},{"path":"/reference/plotSelectedFlowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a flow frame from a CytoPipeline run â plotSelectedFlowFrame","text":"","code":"plotSelectedFlowFrame(   experimentName,   whichQueue,   sampleFile,   flowFrameName,   path,   xChannelLabel,   yChannelLabel,   useAllCells,   nDisplayCells,   useFixedLinearRange,   linearRange,   transfoListName = \" \" )"},{"path":"/reference/plotSelectedFlowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a flow frame from a CytoPipeline run â plotSelectedFlowFrame","text":"experimentName experiment name (representing pipeline run) extract flow frame whichQueue \"pre-processing\" \"scale transform\" sampleFile case 'whichQueue' set 'pre-processing, sample file look . can number character. whichQueue == \"scale transform\", sampleFile ignored NULL whichQueue == \"pre-processing\", sampleFile defaulted first one belonging experiment flowFrameName name object fetch (referenced pipeline workflow) path root path look CytoPipeline experiment cache xChannelLabel label channel displayed x axis: conventional syntax : channelName + \" - \" + channelMarker yChannelLabel label channel displayed y axis: conventional syntax : channelName + \" - \" + channelMarker useAllCells TRUE, subsampling done nDisplayCells useAllCells == FALSE, number subsampled cells useFixedLinearRange TRUE, channels using linear scale use fixed range set linearRange linearRange set channels using linear scale, useFixedLinearRange == TRUE transfoListName set \" \", transformation list (object name ending \"_obj\", referenced pipeline workflow) used display.","code":""},{"path":"/reference/plotSelectedFlowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a flow frame from a CytoPipeline run â plotSelectedFlowFrame","text":"ggplot object","code":""},{"path":"/reference/plotSelectedFlowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a flow frame from a CytoPipeline run â plotSelectedFlowFrame","text":"","code":"# run CytoPipeline object first  outputDir <- base::tempdir()   rawDataDir <-     system.file(\"extdata\", package = \"CytoPipeline\") experimentName <- \"OMIP021_PeacoQC\" sampleFiles <-      file.path(         rawDataDir,          list.files(rawDataDir, pattern = \"Donor\")) jsonDir <- system.file(\"extdata\", package = \"CytoPipeline\") jsonPath <- file.path(jsonDir, \"pipelineParams.json\")  pipL2 <- CytoPipeline(     jsonPath,     experimentName = experimentName,     sampleFiles = sampleFiles)  suppressWarnings(execute(     pipL2,     rmCache = TRUE,     path = outputDir)) #> ##################################################### #> ### running SCALE TRANSFORMATION processing steps ### #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor1.fcs #> Removing margins from file : Donor2.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor1.fcs #> Compensating file : Donor2.fcs #> Proceeding with step 4 [flowframe_aggregate] ... #> Proceeding with step 5 [scale_transform_estimate] ... #> ##################################################### #> ### NOW PRE-PROCESSING FILE /__w/_temp/Library/CytoPipeline/extdata/Donor1.fcs... #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor1.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor1.fcs #> Proceeding with step 4 [remove_doublets] ... #> Proceeding with step 5 [remove_debris] ... #> Proceeding with step 6 [remove_dead_cells] ... #> Proceeding with step 7 [perform_QC] ... #> Applying PeacoQC method... #> Starting quality control analysis for Donor1.fcs #> Calculating peaks #> MAD analysis removed 30.75% of the measurements #> The algorithm removed 30.75% of the measurements #> Proceeding with step 8 [transform] ... #> ##################################################### #> ### NOW PRE-PROCESSING FILE /__w/_temp/Library/CytoPipeline/extdata/Donor2.fcs... #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor2.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor2.fcs #> Proceeding with step 4 [remove_doublets] ... #> Proceeding with step 5 [remove_debris] ... #> Proceeding with step 6 [remove_dead_cells] ... #> Proceeding with step 7 [perform_QC] ... #> Applying PeacoQC method... #> Starting quality control analysis for Donor2.fcs #> Calculating peaks #> MAD analysis removed 24.38% of the measurements #> The algorithm removed 24.38% of the measurements #> Proceeding with step 8 [transform] ...  plotSelectedFlowFrame(     experimentName = experimentName,     whichQueue = \"pre-processing\",     sampleFile = 1,     flowFrameName = \"remove_debris_obj\",     path = outputDir,     xChannelLabel = \"FSC-A : NA\",     yChannelLabel = \"SSC-A : NA\",     useAllCells = TRUE,     nDisplayCells = 0,     useFixedLinearRange = TRUE,     linearRange = c(-100, 262144)) #> displaying flow frame plot...   plotSelectedFlowFrame(     experimentName = experimentName,     whichQueue = \"pre-processing\",     sampleFile = 1,     flowFrameName = \"remove_debris_obj\",     path = outputDir,     xChannelLabel = \"FSC-A : NA\",     yChannelLabel = \"SSC-A : NA\",     useAllCells = FALSE,     nDisplayCells = 100,     useFixedLinearRange = FALSE,     linearRange = NULL) #> displaying flow frame plot...   plotSelectedFlowFrame(     experimentName = experimentName,     whichQueue = \"pre-processing\",     sampleFile = 1,     flowFrameName = \"remove_debris_obj\",     path = outputDir,     xChannelLabel = \"Comp-670/30Violet-A : BV785 - CD3\",     yChannelLabel = \"Comp-780/60Red-A : APCCy7 - CD4\",     useAllCells = TRUE,     nDisplayCells = 0,     useFixedLinearRange = FALSE,     linearRange = NULL,     transfoListName = \"scale_transform_estimate_obj\") #> displaying flow frame plot..."},{"path":"/reference/plotSelectedWorkflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a pipeline workflow from a CytoPipeline run â plotSelectedWorkflow","title":"Plot a pipeline workflow from a CytoPipeline run â plotSelectedWorkflow","text":"Plot pipeline workflow CytoPipeline run","code":""},{"path":"/reference/plotSelectedWorkflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a pipeline workflow from a CytoPipeline run â plotSelectedWorkflow","text":"","code":"plotSelectedWorkflow(experimentName, whichQueue, sampleFile, path = path)"},{"path":"/reference/plotSelectedWorkflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a pipeline workflow from a CytoPipeline run â plotSelectedWorkflow","text":"experimentName experiment name (representing pipeline run) extract workflow whichQueue \"pre-processing\" \"scale transform\" sampleFile case 'whichQueue' set 'pre-processing, sample file look . can number character. whichQueue == \"scale transform\", sampleFile ignored NULL whichQueue == \"pre-processing\", sampleFile defaulted first one belonging experiment path root path look CytoPipeline experiment cache","code":""},{"path":"/reference/plotSelectedWorkflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a pipeline workflow from a CytoPipeline run â plotSelectedWorkflow","text":"nothing, displays plot side effect","code":""},{"path":"/reference/plotSelectedWorkflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a pipeline workflow from a CytoPipeline run â plotSelectedWorkflow","text":"","code":"# run CytoPipeline object first  outputDir <- base::tempdir()   rawDataDir <-     system.file(\"extdata\", package = \"CytoPipeline\") experimentName <- \"OMIP021_PeacoQC\" sampleFiles <-      file.path(         rawDataDir,          list.files(rawDataDir, pattern = \"Donor\")) jsonDir <- system.file(\"extdata\", package = \"CytoPipeline\") jsonPath <- file.path(jsonDir, \"pipelineParams.json\")  pipL2 <- CytoPipeline(     jsonPath,     experimentName = experimentName,     sampleFiles = sampleFiles)  suppressWarnings(execute(     pipL2,     rmCache = TRUE,     path = outputDir)) #> ##################################################### #> ### running SCALE TRANSFORMATION processing steps ### #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor1.fcs #> Removing margins from file : Donor2.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor1.fcs #> Compensating file : Donor2.fcs #> Proceeding with step 4 [flowframe_aggregate] ... #> Proceeding with step 5 [scale_transform_estimate] ... #> ##################################################### #> ### NOW PRE-PROCESSING FILE /__w/_temp/Library/CytoPipeline/extdata/Donor1.fcs... #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor1.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor1.fcs #> Proceeding with step 4 [remove_doublets] ... #> Proceeding with step 5 [remove_debris] ... #> Proceeding with step 6 [remove_dead_cells] ... #> Proceeding with step 7 [perform_QC] ... #> Applying PeacoQC method... #> Starting quality control analysis for Donor1.fcs #> Calculating peaks #> MAD analysis removed 30.75% of the measurements #> The algorithm removed 30.75% of the measurements #> Proceeding with step 8 [transform] ... #> ##################################################### #> ### NOW PRE-PROCESSING FILE /__w/_temp/Library/CytoPipeline/extdata/Donor2.fcs... #> ##################################################### #> Proceeding with step 1 [flowframe_read] ... #> Proceeding with step 2 [remove_margins] ... #> Removing margins from file : Donor2.fcs #> Proceeding with step 3 [compensate] ... #> Compensating file : Donor2.fcs #> Proceeding with step 4 [remove_doublets] ... #> Proceeding with step 5 [remove_debris] ... #> Proceeding with step 6 [remove_dead_cells] ... #> Proceeding with step 7 [perform_QC] ... #> Applying PeacoQC method... #> Starting quality control analysis for Donor2.fcs #> Calculating peaks #> MAD analysis removed 24.38% of the measurements #> The algorithm removed 24.38% of the measurements #> Proceeding with step 8 [transform] ...  plotSelectedWorkflow(     experimentName = experimentName,     whichQueue = \"pre-processing\",     sampleFile = sampleFiles[1],     path = outputDir)       plotSelectedWorkflow(     experimentName = experimentName,     whichQueue = \"scale transform\",     sampleFile = NULL,     path = outputDir)"},{"path":[]},{"path":"/news/index.html","id":"cytopipelinegui-1-1","dir":"Changelog","previous_headings":"","what":"CytoPipelineGUI 1.1.3","title":"CytoPipelineGUI 1.1","text":"re-factored package documentation file","code":""},{"path":"/news/index.html","id":"cytopipelinegui-1-1-1","dir":"Changelog","previous_headings":"","what":"CytoPipelineGUI 1.1.2","title":"CytoPipelineGUI 1.1","text":"added CITATION file","code":""},{"path":"/news/index.html","id":"cytopipelinegui-1-1-2","dir":"Changelog","previous_headings":"","what":"CytoPipelineGUI 1.1.1","title":"CytoPipelineGUI 1.1","text":"re-factored documentation files","code":""},{"path":[]},{"path":"/news/index.html","id":"cytopipelinegui-0-99","dir":"Changelog","previous_headings":"","what":"CytoPipelineGUI 0.99.2","title":"CytoPipelineGUI 0.99","text":"added ShinyApps additional BiocView","code":""},{"path":"/news/index.html","id":"cytopipelinegui-0-99-1","dir":"Changelog","previous_headings":"","what":"CytoPipelineGUI 0.99.1","title":"CytoPipelineGUI 0.99","text":"Modified man pages vignettes address comments raised Bioconductor submission","code":""},{"path":"/news/index.html","id":"cytopipelinegui-0-99-2","dir":"Changelog","previous_headings":"","what":"CytoPipelineGUI 0.99.0","title":"CytoPipelineGUI 0.99","text":"First version","code":""}]
